<HTML>
<HEAD>
<TITLE>Resource types</TITLE>
<LINK rel = "stylesheet" type = "text/css" href = "../styles.css">
</HEAD>
<BODY>
	<DIV>
		<H1>RESOURCE TYPES</H1>
		<P><B>Resource types</B> determine the structure of the program's (<A href="../html/rdo_terms.htm">model's</A>) global database. They are described in a separate <A href="../html/rdo_terms.htm#object">object</A> (with extension <FONT class="syntax">.rtp</FONT>).</P>
		<P><A name="res_type"></A>The description of each resource type has the following format:</P>
		<PRE class="syntax">$Resource_type <A class="syntax" href="#type_name">&lt;type_name&gt;</A> : <A class="syntax" href="#res_kind">&lt;kind_of_resources&gt;</A>
$Parameters
<A class="syntax" href="#param_desc">&lt;parameter_description&gt;</A> { &lt;parameter_description&gt; }
$End</PRE>
		<DL class="syntax">
			<DT class="syntax"><A name="type_name"></A><I>type_name</I></DT>
			<DD class="syntax">Type's name is a <A href="../html/rdo_lex_div_names.htm">simple name</A>. Type names should be different for each type, they should not coincide with the reserved words.</DD>
			<DT class="syntax"><A name="res_kind"></A><I>kind_of_resources</I></DT>
			<DD class="syntax">For a given resource type, the kind of a resource may be one of the following:
				<TABLE class="visible">
					<TR valign="top">
						<TH align="left" width="20%">Kind of a resource</TH>
						<TH align="left" width="80%">Meaning</TH>
					</TR>
					<TR valign="top">
						<TD class="visible" NOWRAP width="20%"><FONT class="syntax">permanent</FONT></TD>
						<TD class="visible" width="80%">These are permanent resources always present in the model; they can be neither created nor eliminated when running the model</TD>
					</TR>
					<TR valign="top">
						<TD class="visible" NOWRAP width="20%"><A name="temporary"></A><FONT class="syntax">temporary</FONT></TD>
						<TD class="visible" width="80%">These are temporary resources that can be created or eliminated when fulfilling operations or rules, or at irregular events</TD>
					</TR>
				</TABLE>
			</DD>
			<DT class="syntax"><A name="param_desc"></A><I>parameter_description</I></DT>
			<DD class="syntax">Resource parameter description has the following format:<BR>
				<PRE class="syntax"><A class="syntax" href="#param_name">&lt;parameter_name&gt;</A> : <A class="syntax" href="#param_type">&lt;parameter_type&gt;</A> [ = <A class="syntax" href="#def_value">&lt;default_value&gt;</A> ]</PRE>
				<DL class="syntax">
					<DT class="syntax"><A name="param_name"></A><I>parameter_name</I></DT>
					<DD class="syntax">Parameter name is a <A href="../html/rdo_lex_div_names.htm">simple name</A>. Parameter names should be different for each parameter of a given type; they should not coincide with resource type names nor with the reserved words. A parameter name may coincide with the name of some parameter of another resource type.</DD>
					<DT class="syntax"><A name="param_type"></A><I>parameter_type</I></DT>
					<DD class="syntax">Parameter type is just one of the <A href="../html/rdo_base_types.htm">data types</A> described above. References are possible on the parameters of previously described resource types and on the previously described resource parameters of this resource type.</DD>
					<DT class="syntax"><A name="def_value"></A><I>default_value</I></DT>
					<DD class="syntax">Default value may be determined for a parameter of any type. That value should be written after equality sign as an integer or real numerical constant, or as a value name for an enumerative parameter. When indicating a type with a reference, default values are possible too. In that case the value determined may differ from the default value of the parameter belonging to the type referred to.</DD>
				</DL>
			</DD>
		</DL>
		<H4>Remarks</H4>
		<P class="remarks">When describing complex systems, the so-called representation problem is often encountered. The problem's essence is that many ways of description are possible, so the developer has to select some way basing on his/her skill, intuition and other reasons. Different descriptions may differ by their modelling efficiency, descriptivity, and conveniency of formulating the patterns and so forth.</P>
		<H4>Examples</H4>
		<PRE class="samples">$Resource_type Type_1 : permanent
$Parameters
  Parameter_1 :  integer = 10
  Parameter_2 :  real
  Parameter_3 :  integer [0..1000] = 0
  Parameter_4 :  real [0.0..20.0]
  Parameter_5 :  (Free, Busy, Loading, Unloading) =
                Free
  Parameter_6 :  such_as Type_1.Parameter_1 = 20
  Parameter_7 :  such_as Type_1.Parameter_4
  Parameter_8 :  such_as Type_1.Parameter_5
  Parameter_9 :  such_as Type_1.Parameter_5 = Busy
  Parameter_10 : such_as Type_1.Parameter_9
$End
</PRE>
	<H4>See Also</H4>
	<P><A href="../html/rdo_base_types.htm">Data types. Types correspondence</A></P>
	<P><A href="../html/rdo_base_resources.htm">Resources description</A></P>
	</DIV>
	<A name="prev_section;../html/rdo_lex_div_intro.htm;Lexems and separators">
	<A name="next_section;../html/rdo_obj_intro.htm;Certain constructions of the language">
	<A name="section_top;../html/rdo_base_intro.htm;Primary constructions of RAO language">
	<A name="section;Primary constructions of RAO language;">
	<A name="prev_topic;../html/rdo_base_std_var_func.htm;Global variables and standard functions">
	<A name="next_topic;../html/rdo_base_resources.htm;Resources description">
	<A name="title;RAO language help"><BR><SCRIPT src="../navbar.js"></SCRIPT>
</BODY>
</HTML>
