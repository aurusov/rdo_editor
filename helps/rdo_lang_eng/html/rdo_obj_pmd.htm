<HTML>
<HEAD>
<TITLE>Performance measures description object</TITLE>
<LINK rel = "stylesheet" type = "text/css" href = "../styles.css">
</HEAD>
<BODY>
	<DIV>
		<H1>PERFORMANCE MEASURES DESCRIPTION OBJECT</H1>
		<P>The <B>indexes</B> necessary to collect when running a model are described in a separate <A href="../html/rdo_terms.htm#object">object</A> (with extension <FONT class="syntax">.pmd</FONT>) of the following format:</P>
		<PRE class="syntax">$Results
<A class="syntax" href="#pmd_desc">&lt;index_description&gt;</A> { &lt;index_description&gt; }
$End</PRE>
		<DL class="syntax">
			<DT class="syntax"><A name="pmd_desc"></A><I>index_description</I></DT>
			<DD class="syntax">Describing a separate index requires another format:
				<PRE class="syntax"><A class="syntax" href="#pmd_name">&lt;name_of_an_index&gt;</A> : <A class="syntax" href="#trace_feat">&lt;tracing_sign&gt;</A> <A class="syntax" href="#pmd_type">&lt;kind_of_an_index&gt;</A>
  <A class="syntax" href="#pmd_descriptor">&lt;descriptor&gt;</A></PRE>
				<DL class="syntax">
					<DT class="syntax"><A name="pmd_name"></A><I>name_of_an_index</I></DT>
					<DD class="syntax">The name of an index is a <A href="../html/rdo_lex_div_names.htm">simple name</A>. Names have to be different for different indexes, they must not coincide with any name determined before.</DD>
					<DT class="syntax"><A name="trace_feat"></A><A name="trace_feat_no"><A name="trace_feat_yes"><I>tracing_sign</I></DT>
					<DD class="syntax">Tracing sign may be determined for an index (for more details see <A href="../html/rdo_res_trc.htm">tracing object description</A>). That sign is determined with one of the two reserved words:
						<TABLE class="visible" style="width: 85%">
							<TR valign="top">
								<TH align="left" width="20%">Value</TH>
								<TH align="left" width="80%">Description</TH>
							</TR>
							<TR valign="top">
								<TD class="visible" NOWRAP width="20%"><FONT class="syntax">trace</FONT></TD>
								<TD class="visible" width="80%">Means to do the tracing of the index value changes</TD>
							</TR>
							<TR valign="top">
								<TD class="visible" NOWRAP width="20%"><FONT class="syntax">no_trace</FONT></TD>
								<TD class="visible" width="80%">Means not to do the tracing of the index value changes</TD>
							</TR>
						</TABLE>
						<P>By default, <FONT class="syntax">no_trace</FONT> value is accepted for that sign, so that value may be not indicated.</P>
					</DD>
					<DT class="syntax"><A name="pmd_type"></A><I>kind_of_an_index</I></DT>
					<DD class="syntax">Indexes of the following kinds are collected in RAO:
						<TABLE class="visible" style="width: 85%">
							<TR valign="top">
								<TH align="left" width="20%">Kind of an index</TH>
								<TH align="left" width="80%">Description</TH>
							</TR>
							<TR valign="top">
								<TD class="visible" NOWRAP width="20%"><FONT class="syntax">watch_par</FONT></TD>
								<TD class="visible" width="80%">To watch a resource parameter value</TD>
							</TR>
							<TR valign="top">
								<TD class="visible" NOWRAP width="20%"><FONT class="syntax">watch_state</FONT></TD>
								<TD class="visible" width="80%">To watch the system's state</TD>
							</TR>
							<TR valign="top">
								<TD class="visible" NOWRAP width="20%"><FONT class="syntax">watch_quant</FONT></TD>
								<TD class="visible" width="80%">To watch the quantity of temporary resources</TD>
							</TR>
							<TR valign="top">
								<TD class="visible" NOWRAP width="20%"><FONT class="syntax">watch_value</FONT></TD>
								<TD class="visible" width="80%">To watch a temporary resource parameter value at the moment the resource is eliminated</TD>
							</TR>
							<TR valign="top">
								<TD class="visible" NOWRAP width="20%"><FONT class="syntax">get_value</FONT></TD>
								<TD class="visible" width="80%">To watch a value at the moment the run is finished</TD>
							</TR>
						</TABLE>
					</DD>
					<DT class="syntax"><A name="pmd_descriptor"></A><I>descriptor</I></DT>
					<DD class="syntax">The descriptor format depends on the index kind. Formats are given below for all kinds of indexes, with necessary explanations.
						<PRE class="syntax">watch_par &lt;resource_parameter_name&gt;</PRE>
						<P>A <A href="../html/rdo_base_res_types.htm#param_desc">resource parameter</A> has to be either of real or of integer type. During a run, the parameter value changes are watched, and after the run is over statistics are put out on the parameter values during the run.</P><BR>
						<PRE class="syntax"><A name="ws"></A>watch_state &lt;logical_expression&gt;</PRE>
						<P>The values of the <A href="../html/rdo_base_equations.htm#log_expr">logical expression</A> are watched during the run too, and after the run information is put out about how long that expression was true. That information allows accumulating statistics about how long the system retained the state described by the logic expression.</P><BR>
						<PRE class="syntax">watch_quant <A class="syntax" href="#wq_type_name">&lt;type_name&gt;</A> [ NoCheck | <A class="syntax" href="#wq_log_expr">&lt;logical_expression&gt;</A> ]</PRE>
						<DL class="syntax">
							<DT class="syntax"><A name="wq_type_name"></A><I>type_name</I></DT>
							<DD class="syntax">Type name is a name of one of the temporary resource types described in the <A href="../html/rdo_base_res_types.htm">types object</A>.</DD>
							<DT class="syntax"><A name="wq_log_expr"></A><I>logical_expression</I></DT>
							<DD class="syntax">The <A href="../html/rdo_base_equations.htm#log_expr">logical expression</A> describes a condition that has to be satisfied by the temporary resource's state.
								<P>In the logical expression, construction of &lt;type_name&gt;.&lt;parameter_name&gt; is used for the values of temporary resources parameters values; the type name must coincide with the name written after reserved word <FONT class="syntax">watch_quant</FONT>.</P>
							</DD>
						</DL>
						<P>If it is necessary to watch quantities of resources of that type no matter what their state is, then reserved word <FONT class="syntax"><A name="nchk_1"></A>NoCheck</FONT> is used instead of the logical expression.</P>
						<P>During a run, quantities are watched of temporary resources of the given type in the system while their state satisfies the condition. After the run, statistics are put out on these quantities.</P><BR>
						<PRE class="syntax">watch_value <A class="syntax" href="#wv_type_name">&lt;type_name&gt;</A> [ NoCheck | <A class="syntax" href="#wv_log_expr">&lt;logical_expression&gt;</A> ]
  <A class="syntax" href="#wv_arith_expr">&lt;arithmetic_expression&gt;</A></PRE>
						<DL class="syntax">
							<DT class="syntax"><A name="wv_type_name"></A><I>type_name</I></DT>
							<DD class="syntax">Type name is a name of one of the temporary resource types described in the <A href="../html/rdo_base_res_types.htm">types object</A>.</DD>
							<DT class="syntax"><A name="wv_log_expr"></A><I>logical_expression</I></DT>
							<DD class="syntax">The <A href="../html/rdo_base_equations.htm#log_expr">logical expression</A> describes the condition that has to be satisfied by the temporary resource's state.
								<P>In the logical expression, construction of &lt;type_name&gt;.&lt;parameter_name&gt; is used for the values of temporary resources parameters values; the type name must coincide with the name written after reserved word <FONT class="syntax">watch_value</FONT>.</P>
							</DD>
							<DT class="syntax"><A name="wv_arith_expr"></A><I>arithmetic_expression</I></DT>
							<DD class="syntax">The <A href="../html/rdo_base_equations.htm#arith_expr">arithmetic expression</A> has to be of either integer or real type.
								<P>In the arithmetic expression, construction of &lt;type_name&gt;.&lt;parameter_name&gt; is used for the values of temporary resources parameters values; the type name must coincide with the name written after reserved word <FONT class="syntax">watch_value</FONT>.</P>
							</DD>
						</DL>
						<P>When the state does not matter, then reserved word <FONT class="syntax"><A name="nchk_2"></A>NoCheck</FONT> is written instead of the logic expression.</P>
						<P>During a run, statistics are collected on the arithmetic expression values at the moments resources of the type specified are eliminated, provided these resources states satisfy the condition.</P><BR>
						<PRE class="syntax"><A name="gw"></A>get_value &lt;arithmetic_expression&gt;</PRE>
						<P>The value of the <A href="../html/rdo_base_equations.htm#arith_expr">arithmetic expression</A> at the moment of finishing the run is put out into the results object.</P>
					</DD>
				</DL>
			</DD>
		</DL>
		<H4>Examples</H4>
		<PRE class="samples">$Results
  Index_1 :  trace watch_state Resource_2.Parameter_5 = Busy
  Index_2 :  watch_state Resource_2.Parameter_5 = Busy and
                         Resource_1.Parameter_1 &gt; 10
  Index_3 :  watch_par   Resource_1.Parameter_1
  Index_4 :  watch_par   Resource_2.Parameter_2
  Index_5 :  trace watch_quant Type_2 NoCheck
  Index_6 :  trace watch_quant Type_2 Type_2.Parameter_3 &lt;= 10.0
  Index_7 :  watch_value Type_2 NoCheck Type_2.Arrival_time
  Index_8 :  watch_value Type_2 Type_2.Parameter_3 &lt; 20.0
                         Type_2.Arrival_time
  Index_9 :  get_value Resource_1.Parameter_1 * Time_now
  Index_10 : get_value Time_now
$End</PRE>
	<H4>See Also</H4>
	<P><A href="../html/rdo_base_res_types.htm">Resource types</A></P>
	<P><A href="../html/rdo_base_resources.htm">Resources description</A></P>
	</DIV>
	<A name="prev_section;../html/rdo_obj_const_fun_sec.htm;Symbol constants, functions and sequences description">
	<A name="next_section;../html/rdo_res_intro.htm;Simulation results">
	<A name="section_top;../html/rdo_obj_intro.htm;Certain constructions of the language">
	<A name="section;Certain constructions of the language;">
	<A name="prev_topic;../html/rdo_obj_frm.htm;Frames description">
	<A name="next_topic;../html/rdo_obj_smr.htm;Run object">
	<A name="title;RAO language help"><BR><SCRIPT src="../navbar.js"></SCRIPT>
</BODY>
</HTML>
