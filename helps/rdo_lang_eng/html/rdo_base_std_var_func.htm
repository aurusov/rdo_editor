<HTML>
<HEAD>
<TITLE>Global variables and standard functions</TITLE>
<LINK rel = "stylesheet" type = "text/css" href = "../styles.css">
</HEAD>
<BODY>
	<DIV>
		<H1>GLOBAL VARIABLES AND STANDARD FUNCTIONS</H1>
		<P><A name="glob"></A>Global variables and standard arithmetic functions can be used in <A href="../html/rdo_base_equations.htm#arith_expr">arithmetic expressions</A>.</P>
		<P>In the language version considered, there are two <B>global variables</B></P>
		<TABLE class="visible">
			<TR valign="top">
				<TH align="left" width="20%">Variable name</TH>
				<TH align="left" width="20%">Variable type</TH>
				<TH align="left" width="60%">Description</TH>
			</TR>
			<TR valign="top"><A name="sec"></A>
				<TD class="visible" width="20%"><FONT class="syntax">Seconds</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="60%">Contains the number of seconds elapsed from the moment when modelling began.</TD>
			</TR>
			<TR valign="top"><A name="time_now"></A>
				<TD class="visible" width="20%"><FONT class="syntax">Time_now</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="60%">Contains the current model time (the time in the system modelled) in time units.</TD>
			</TR>
		</TABLE>
		<P><B>Standard <A name="arith"></A>arithmetic functions</B> included in the language version considered are listed in the following table with corresponding comments:</P>
		<TABLE class="visible">
			<TR valign="top">
				<TH align="left" width="10%">Function name</TH>
				<TH align="left" width="20%">Value type</TH>
				<TH align="left" width="20%">First argument type</TH>
				<TH align="left" width="20%">Second argument type</TH>
				<TH align="left" width="30%">Description</TH>
			</TR>
			<TR valign="top"><A name="abs"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Abs(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the absolute value of the real argument <FONT class="syntax">x</FONT></TD>
			</TR>
			<TR valign="top"><A name="arccos"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">ArcCos(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the anti-cosine of the argument <FONT class="syntax">x</FONT>, given in radians</TD>
			</TR>
			<TR valign="top"><A name="arcsin"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">ArcSin(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the anti-sine of the argument <FONT class="syntax">x</FONT>, given in radians</TD>
			</TR>
			<TR valign="top"><A name="arctan"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">ArcTan(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the anti-tangent of the argument <FONT class="syntax">x</FONT>, given in radians</TD>
			</TR>
			<TR valign="top"><A name="cos"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Cos(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the cosine of the argument <FONT class="syntax">x</FONT>, given in radians</TD>
			</TR>
			<TR valign="top"><A name="cotan"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Cotan(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the cotangent of the argument <FONT class="syntax">x</FONT>, given in radians</TD>
			</TR>
			<TR valign="top"><A name="exp"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Exp(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the value of <FONT class="syntax">å</FONT> in the power <FONT class="syntax">x</FONT></TD>
			</TR>
			<TR valign="top"><A name="floor"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Floor(x)</FONT></TD>
				<TD class="visible" width="20%">integer</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">The result of the function is the greatest integer number not outnumbering <FONT class="syntax">x</FONT></TD>
			</TR>
			<TR valign="top"><A name="frac"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Frac(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Returns the fractional part of the real argument <FONT class="syntax">x</FONT></TD>
			</TR>
			<TR valign="top"><A name="iabs"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">IAbs(x)</FONT></TD>
				<TD class="visible" width="20%">integer</TD>
				<TD class="visible" width="20%">integer</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the absolute value of the integer argument <FONT class="syntax">x</FONT></TD>
			</TR>
			<TR valign="top"><A name="imax"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">IMax(x,y)</FONT></TD>
				<TD class="visible" width="20%">integer</TD>
				<TD class="visible" width="20%">integer</TD>
				<TD class="visible" width="20%">integer</TD>
				<TD class="visible" width="30%">Returns the maximum of two integer arguments <FONT class="syntax">x</FONT> and <FONT class="syntax">y</FONT></TD>
			</TR>
			<TR valign="top"><A name="imin"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">IMin(x,y)</FONT></TD>
				<TD class="visible" width="20%">integer</TD>
				<TD class="visible" width="20%">integer</TD>
				<TD class="visible" width="20%">integer</TD>
				<TD class="visible" width="30%">Returns the minimum of two integer arguments <FONT class="syntax">x</FONT> and <FONT class="syntax">y</FONT></TD>
			</TR>
			<TR valign="top"><A name="int"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Int(x)</FONT></TD>
				<TD class="visible" width="20%">integer</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">The result of the function is the greatest integer number not outnumbering <FONT class="syntax">x</FONT></TD>
			</TR>
			<TR valign="top"><A name="intpower"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">IntPower(x,y)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">integer</TD>
				<TD class="visible" width="30%">Calculates the value of <FONT class="syntax">x</FONT> in integer power <FONT class="syntax">y</FONT> taking into account the sign of <FONT class="syntax">x</FONT>. If <FONT class="syntax">x</FONT> is negative and <FONT class="syntax">y</FONT> is odd then the result is negative</TD>
			</TR>
			<TR valign="top"><A name="ln"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Ln(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the natural logarithm of the positive argument <FONT class="syntax">x</FONT></TD>
			</TR>
			<TR valign="top"><A name="log10"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Log10(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the logarithm of the positive argument <FONT class="syntax">x</FONT> to the base 10</TD>
			</TR>
			<TR valign="top"><A name="log2"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Log2(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the logarithm of the positive argument <FONT class="syntax">x</FONT> to the base 2</TD>
			</TR>
			<TR valign="top"><A name="logn"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">LogN(x,y)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="30%">Calculates logarithm of the positive argument <FONT class="syntax">x</FONT> to the base <FONT class="syntax">y</FONT>. Argument <FONT class="syntax">y</FONT> must be positive</TD>
			</TR>
			<TR valign="top"><A name="max"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Max(x,y)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="30%">Returns the maximum of two real arguments <FONT class="syntax">x</FONT> and <FONT class="syntax">y</FONT></TD>
			</TR>
			<TR valign="top"><A name="min"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Min(x,y)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="30%">Returns the minimum of two real arguments <FONT class="syntax">x</FONT> and <FONT class="syntax">y</FONT></TD>
			</TR>
			<TR valign="top"><A name="power"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Power(x,y)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="30%">Calculates the value of <FONT class="syntax">x</FONT> in power <FONT class="syntax">y</FONT>. <FONT class="syntax">x</FONT> must be not negative</TD>
			</TR>
			<TR valign="top"><A name="round"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Round(x)</FONT></TD>
				<TD class="visible" width="20%">integer</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Rounds off the value of the real argument <FONT class="syntax">x</FONT> to the nearest integer number</TD>
			</TR>
			<TR valign="top"><A name="sin"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Sin(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the sine of the argument <FONT class="syntax">x</FONT>, given in radians</TD>
			</TR>
			<TR valign="top"><A name="sqrt"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Sqrt(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the square root of <FONT class="syntax">x</FONT>. <FONT class="syntax">x</FONT> must be not negative</TD>
			</TR>
			<TR valign="top"><A name="tan"></A>
				<TD class="visible" NOWRAP width="10%"><FONT class="syntax">Tan(x)</FONT></TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%">real</TD>
				<TD class="visible" width="20%"></TD>
				<TD class="visible" width="30%">Calculates the tangent of the argument <FONT class="syntax">x</FONT>, given in radians</TD>
			</TR>
		</TABLE>
		<A name="log"></A>
		<P>In addition to standard arithmetic functions, there are fourth standard functions which value can be TRUE or FALSE. The syntax of these functions calls is the following:</P>
		<PRE class="syntax">&lt;function_name&gt; ( &lt;resource_type_name&gt; :
(&lt;logical_expression&gt; | NoCheck) )</PRE>
		<P><B>Standard logical functions</B> are used in <A href="../html/rdo_base_equations.htm#log_expr">logical expressions</A>. Their names and means of values calculation are given below:</P>
		<TABLE class="visible">
			<TR valign="top">
				<TH align="left" width="20%">Function name</TH>
				<TH align="left" width="80%">Meaning</TH>
			</TR>
			<TR valign="top"><A name="exist"></A>
				<TD class="visible" width="20%"><FONT class="syntax">Exist</FONT></TD>
				<TD class="visible" width="80%">If at least one resource of indicated type exists which state meets the given logical expression then function returns TRUE, otherwise it returns FALSE</TD>
			</TR>
			<TR valign="top"><A name="not_exist"></A>
				<TD class="visible" width="20%"><FONT class="syntax">Not_Exist</FONT></TD>
				<TD class="visible" width="80%">If none of the resource of indicated type exists which state meets the given logical expression then function returns TRUE, otherwise it returns FALSE</TD>
			</TR>
			<TR valign="top"><A name="for_all"></A>
				<TD class="visible" width="20%"><FONT class="syntax">For_All</FONT></TD>
				<TD class="visible" width="80%">If the state of all resources of indicated type meets the given logical expression then function returns TRUE, otherwise it returns FALSE</TD>
			</TR>
			<TR valign="top"><A name="not_for_all"></A>
				<TD class="visible" width="20%"><FONT class="syntax">Not_For_All</FONT></TD>
				<TD class="visible" width="80%">If the state of not all resources of indicated type meets the given logical expression then function returns TRUE, otherwise it returns FALSE</TD>
			</TR>
		</TABLE>
		<P>If the reserved word <A name="nocheck"></A><FONT class="syntax">NoCheck</FONT> is used instead of logical expression then all resources of indicated type are considered. In this case the function <FONT class="syntax">Exist</FONT> determines, if at least one resource of indicated type exists, the function <FONT class="syntax">For_All</FONT> always returns the value TRUE (even if none of the resource of indicated type exists) and the function <FONT class="syntax">Not_For_All</FONT> always returns the value FALSE.</P>
		<H4>Examples</H4>
		<PRE class="samples">Exist(Requests : Requests.State = waiting)</PRE>
		<PRE class="samples">Not_Exist(Type_1 : NoCheck)</PRE>
		<PRE class="samples">Not_For_All(Tool : Tool.Number &gt; 3 and
            Tool.State = free)</PRE>
		<H4>See Also</H4>
		<P><A href="../html/rdo_base_types.htm">Data types. Types correspondence</A></P>
	</DIV>
	<A name="prev_section;../html/rdo_lex_div_intro.htm;Lexems and separators">
	<A name="next_section;../html/rdo_obj_intro.htm;Certain constructions of the language">
	<A name="section_top;../html/rdo_base_intro.htm;Primary constructions of RAO language">
	<A name="section;Primary constructions of RAO language;">
	<A name="prev_topic;../html/rdo_base_equations.htm;Arithmetic and logical expressions">
	<A name="next_topic;../html/rdo_base_res_types.htm;Resource types">
	<A name="title;RAO language help"><BR><SCRIPT src="../navbar.js"></SCRIPT>
</BODY>
</HTML>